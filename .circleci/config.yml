# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  swissknife: wiz-sec/swissknife@0.4.0
  welcome: circleci/welcome-orb@0.4.1

executors:
  ops:
    docker:
      - image: dtzar/helm-kubectl
  golang:
    docker:
      - image: golang:1.17

triggers: &triggers '[
    {
        "regex": "^(flux2)/.*",
        "param_name": "flux2"
    },
    {
        "regex": "^(git-proxy)/.*",
        "param_name": "git-proxy"
    },
    {
        "regex": "^(.)/.*",
        "param_name": "run_chart_validation_test"
    }
]'

parameters:
  run_trigger_workflow:
    default: true
    type: boolean
  run_chart_validation_test:
    default: true
    type: boolean
  flux2:
    default: false
    type: boolean
  git-proxy:
    default: false
    type: boolean
  swissknife_sha:
    default: ""
    type: string

commands:
  test:
    steps:
      - run:
          when: always
          name: test
          command: |
            echo test

jobs:
  trigger-needed-workflows:
    executor: ops
    working_directory: ~/project/
    steps:
      - checkout
      - swissknife/trigger-workflows-for-all-modified:
          base-branch: << pipeline.git.branch >>
          run-mode-for-base-branch: run_for_last_commit
          use-divergence-point: true
          code-param-name-map: *triggers
          additional-param-map: '{"run_trigger_workflow": false}'
          use-swissknife-sha: true
          wait-for-workflows: true

  run-chart-validation-test:
    executor: golang
    working_directory: ~/project/
    steps:
      - checkout:
          path: ~/project
      - run:
          name: 'Creating directory for GOPATH and override it to be /go'
          command: |
            go env -w GOPATH=/go
            go mod tidy
      - run:
          name: Run chart validation tests
          command: |
            go test -v .

  upload_new_chart:
    executor: ops
    parameters:
      package:
        type: string
    working_directory: ~/project/
    steps:
      - checkout:
          path: ~/project
      - add_ssh_keys:
          fingerprints:
            - "65:8f:74:1a:d8:40:bd:db:1d:ca:09:16:46:3b:7b:36"
      - run:
          name: Read-Write checkout
          command: |
            mkdir -pm0700 ~/.ssh
            ssh-keyscan github.com > ~/.ssh/known_hosts
            echo 'Host gitops
              Hostname github.com
              IdentityFile ~/.ssh/id_rsa_658f741ad840bddb1dca0916463b7b36
              IdentitiesOnly yes' > ~/.ssh/config
            git clone -b master git@gitops:wiz-sec/charts.git
      - run:
          name: push new package
          command: |
            cd charts
            helm package ./<< parameters.package >>
            helm repo index --url https://wiz-sec.github.io/charts/ .
            git config user.email "circleci@wiz.io"
            git config user.name "CircleCI"
            git add .
            git commit -a -m "CircleCI: Upload << parameters.package >> chart"
            git push

workflows:
  trigger-needed-workflows:
    when:
      << pipeline.parameters.run_trigger_workflow >>
    jobs:
      - trigger-needed-workflows

  run-chart-validation-test:
    when:
      << pipeline.parameters.run_chart_validation_test >>
    jobs:
      - run-chart-validation-test

  flux2:
    when:
      << pipeline.parameters.flux2 >>
    jobs:
      - upload_new_chart:
          package: flux2
          filters:
            branches:
              only:
                - master

  git-proxy:
    when:
      << pipeline.parameters.git-proxy >>
    jobs:
      - upload_new_chart:
          package: git-proxy
          filters:
            branches:
              only:
                - master

